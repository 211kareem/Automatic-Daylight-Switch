<page id="id" name="Calculate Light Value"><PageHeight>undefined</PageHeight><PageWidth>undefined</PageWidth><PageBackgroundColor>undefined</PageBackgroundColor><PageCssCode/><PageParameters><Parameter name="PageId"><Type>label</Type><Value>1</Value><Description>Page Id</Description><Name>PageId</Name><DisplayName>Page Id</DisplayName></Parameter><Parameter name="PageName"><Type>input</Type><Value>Calculate Light Value</Value><Description>Page Name</Description><Name>PageName</Name><DisplayName>Page Name</DisplayName></Parameter><Parameter name="PageType"><Type>Select</Type><Value>Standard,Standard,Template,Menu</Value><SelectedValue>Standard</SelectedValue><Description>Page Type</Description><Name>PageType</Name><DisplayName>Page Type</DisplayName></Parameter><Parameter name="PageTemplateId"><Type>input</Type><Value/><Description>Set the name of the template page that your page will inherit from it</Description><Name>PageTemplateId</Name><DisplayName>Template Name</DisplayName></Parameter><Parameter name="PageMenuId"><Type>input</Type><Value/><Description>Set the name of the menu page that you will copy it's plugins sto your page</Description><Name>PageMenuId</Name><DisplayName>Page menu name</DisplayName></Parameter><Parameter name="PreventLoadingIcon"><Type>True/False</Type><Value>1</Value><Description>If checked this will hide loading icon</Description><Name>PreventLoadingIcon</Name><DisplayName>Prevent Loading Icon</DisplayName></Parameter><Parameter name="RequireSensorList"><Type>True/False</Type><Value>0</Value><DisplayName>Get sensors list in RTE</DisplayName><Name>RequireSensorList</Name><Description>Require sensor list in RTE</Description></Parameter><Parameter name="RequireAppList"><Type>True/False</Type><Value>0</Value><DisplayName>Get applications list in RTE</DisplayName><Name>RequireAppList</Name><Description>Require applications list in RTE</Description></Parameter><Parameter name="PageKeyword"><Type>input</Type><Value/><Description>keyword to help in serach</Description><Name>PageKeyword</Name><DisplayName>Page Keywords</DisplayName></Parameter><Parameter name="PageDescription"><Type>input</Type><Value/><Description>Description for the page content</Description><Name>PageDescription</Name><DisplayName>Description</DisplayName></Parameter><Parameter name="PageHeight"><Type>input</Type><Value>650</Value><Description>Page Height </Description><Name>PageHeight</Name><DisplayName>Page Height</DisplayName></Parameter><Parameter name="PageWidth"><Type>input</Type><Value>1286</Value><Description>Page Width</Description><Name>PageWidth</Name><DisplayName>Page Width</DisplayName></Parameter><Parameter name="BackGroundColor"><Type>color</Type><Value/><Description>BackGround Color</Description><Name>BackGroundColor</Name><DisplayName>BackGround Color</DisplayName></Parameter><Parameter name="CssCode"><Type>Css</Type><Value/><Description>Css code for page</Description><Name>CssCode</Name><DisplayName>Page Css</DisplayName></Parameter><Parameter name="PageOnLoad"><Name>PageOnLoad</Name><Type>event</Type><Value/><DisplayName>On page load</DisplayName><Description>this code will run once the page fully loaded</Description></Parameter><Parameter name="globalFunVar"><Name>globalFunVar</Name><Type>event</Type><Value/><DisplayName>global functions and variables</DisplayName><Description>Global methods and functions to be seen from all plugins</Description></Parameter><Parameter name="onclick"><Name>onclick</Name><Type>event</Type><Value/><DisplayName>click</DisplayName><Description>click event</Description></Parameter><Parameter name="ondbclick"><Name>ondbclick</Name><Type>event</Type><Value/><DisplayName>dbclick</DisplayName><Description>double click event</Description></Parameter><Parameter name="onmouseover"><Name>onmouseover</Name><Type>event</Type><Value/><DisplayName>onmouseover</DisplayName><Description>onmouseover event</Description></Parameter><Parameter name="IsPageDeleted"><Type>hidden</Type><Name>IsPageDeleted</Name><Value/><Description/><DisplayName/></Parameter><Parameter name="SensorsReffrence"><Name>SensorsReffrence</Name><Type>hidden</Type><Value/><Description/><DisplayName/></Parameter><Parameter name="templateCss"><Type>hidden</Type><Name>templateCss</Name><Value/><Description/><DisplayName/></Parameter><Parameter name="templateGlobalFunction"><Type>hidden</Type><Name>templateGlobalFunction</Name><Value/><Description/><DisplayName/></Parameter><Parameter name="templateOnLoad"><Type>hidden</Type><Name>templateOnLoad</Name><Value/><Description/><DisplayName/></Parameter><Parameter name="Saved"><Type>hidden</Type><Value>true</Value><Description/><Name>Saved</Name><DisplayName/></Parameter><Parameter name="PageIssus"><Type>PageIssus</Type><Value/><Description>Show any issues in page like 'Plugins Conflicts'</Description><Name>PageIssus</Name><DisplayName>Page Issues</DisplayName></Parameter></PageParameters><usedPlugin category="installed" type="LabelPlugin" PageSource="undefined"><location><x>293</x><y>19</y></location><Parameter name="TimeFormat"><Name type="singleValue">TimeFormat</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationAliase"><Name type="singleValue">EquationAliase</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationText"><Name type="singleValue">EquationText</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ShowExtraReadingsFirst"><Name type="singleValue">ShowExtraReadingsFirst</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ExtraSensorReadings"><Name type="singleValue">ExtraSensorReadings</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ReffrenceWithAlias"><Name type="singleValue">ReffrenceWithAlias</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PageSource"><Name type="singleValue">PageSource</Name><Type type="singleValue">label</Type><Value type="singleValue">0</Value><DisplayName type="singleValue">Page Source</DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TypeOfPlugin"><Name type="singleValue">TypeOfPlugin</Name><Type type="singleValue">label</Type><Value type="singleValue">LabelPlugin</Value><DisplayName type="singleValue">Plugin Type</DisplayName><Description type="singleValue">Show the type of plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginCategory"><Name type="singleValue">PluginCategory</Name><Type type="singleValue">label</Type><Value type="singleValue">installed</Value><DisplayName type="singleValue">Plugin Category</DisplayName><Description type="singleValue">Show category of plugin custom or installed</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginName"><Name type="singleValue">PluginName</Name><Type type="singleValue">input</Type><Value type="singleValue">LightLable</Value><DisplayName type="singleValue">Plugin name</DisplayName><Description type="singleValue">Set plugin name</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationX"><Name type="singleValue">LocationX</Name><Type type="singleValue">input</Type><Value type="singleValue">293</Value><DisplayName type="singleValue">Location of X axis</DisplayName><Description type="singleValue">Location of X axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationY"><Name type="singleValue">LocationY</Name><Type type="singleValue">input</Type><Value type="singleValue">19</Value><DisplayName type="singleValue">Location of Y axis</DisplayName><Description type="singleValue">Location of Y axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginWidth"><Name type="singleValue">PluginWidth</Name><Type type="singleValue">input</Type><Value type="singleValue">87</Value><DisplayName type="singleValue">Plugin Width</DisplayName><Description type="singleValue">Set image width</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginHeight"><Name type="singleValue">PluginHeight</Name><Type type="singleValue">input</Type><Value type="singleValue">24</Value><DisplayName type="singleValue">Plugin Height</DisplayName><Description type="singleValue">Set image height</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Visible"><Name type="singleValue">Visible</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Visible</DisplayName><Description type="singleValue">Show/Hide the plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="CssClass"><Name type="singleValue">CssClass</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Css Classes</DisplayName><Description type="singleValue">Set Css Classes (Comma separated) for this Plugin Ex:disabled,info</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="DataSource"><Name type="singleValue">DataSource</Name><Type type="singleValue">SensorsList</Type><Value type="singleValue">No SensorNo Reading</Value><DisplayName type="singleValue">Data Source</DisplayName><Description type="singleValue">Select Data Source</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Query"><Name type="singleValue">Query</Name><Type type="singleValue">DataSet</Type><Value type="singleValue"/><DisplayName type="singleValue">SQL query statement</DisplayName><Description type="singleValue">Set SQL query statement to be executed to retrieve Data</Description><Data type="singleValue"/><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HelpTip"><Name type="singleValue">HelpTip</Name><Type type="singleValue">input</Type><Value type="singleValue">Light Intensity Values</Value><DisplayName type="singleValue">Help Tip</DisplayName><Description type="singleValue">Appears When mouseover</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onclick"><Name type="singleValue">onclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">click event</DisplayName><Description type="singleValue">click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ondbclick"><Name type="singleValue">ondbclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">dbclick event</DisplayName><Description type="singleValue">double click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onmouseover"><Name type="singleValue">onmouseover</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">mouseover event</DisplayName><Description type="singleValue">on mouseover event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LabelValue"><Name type="singleValue">LabelValue</Name><Type type="singleValue">input</Type><Value type="singleValue">Light Values</Value><DisplayName type="singleValue">Caption</DisplayName><Description type="singleValue">Set label caption</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="MultipleLine"><Name type="singleValue">MultipleLine</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Multiple lines</DisplayName><Description type="singleValue">Enable/disable multiple lines to control the width and hight of label</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Scroll"><Name type="singleValue">Scroll</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Scroll</DisplayName><Description type="singleValue">Enable/disable Scroll feature when multiple lines parameter is true</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HasBorder"><Name type="singleValue">HasBorder</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Show border</DisplayName><Description type="singleValue">Show/hide border</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderRounded"><Name type="singleValue">BorderRounded</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Rounded border</DisplayName><Description type="singleValue">Enable/disable rounded border</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TextRotation"><Name type="singleValue">TextRotation</Name><Type type="singleValue">Select</Type><Value type="array"><element>rotate(0deg)</element><element>rotate(90deg)</element><element>rotate(270deg)</element></Value><DisplayName type="singleValue">Rotation</DisplayName><Description type="singleValue">Select rotation angle for text</Description><SelectedValue type="singleValue">rotate(0deg)</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontSize"><Name type="singleValue">FontSize</Name><Type type="singleValue">Select</Type><Value type="array"><element>14px</element><element>17px</element><element>20px</element><element>22px</element><element>24px</element><element>26px</element><element>28px</element></Value><DisplayName type="singleValue">Font size</DisplayName><Description type="singleValue">Select font size</Description><SelectedValue type="singleValue">20px</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontFamily"><Name type="singleValue">FontFamily</Name><Type type="singleValue">Select</Type><Value type="array"><element>Arial</element><element>Courrier New</element><element>Times New Roman</element></Value><DisplayName type="singleValue">Font Family</DisplayName><Description type="singleValue">The fontFamily property sets a list of font-family names for text</Description><SelectedValue type="singleValue">Times New Roman</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontStyle"><Name type="singleValue">FontStyle</Name><Type type="singleValue">Select</Type><Value type="array"><element>normal</element><element>italic</element><element>oblique</element><element>initial</element></Value><DisplayName type="singleValue">Font style</DisplayName><Description type="singleValue">Select font style</Description><SelectedValue type="singleValue">normal</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontWeight"><Name type="singleValue">FontWeight</Name><Type type="singleValue">Select</Type><Value type="array"><element>normal</element><element>bold</element><element>bolder</element><element>lighter</element><element>100</element><element>200</element><element>300</element><element>400</element><element>500</element><element>600</element><element>700</element><element>800</element><element>900</element></Value><DisplayName type="singleValue">Font weight</DisplayName><Description type="singleValue">Select font weight</Description><SelectedValue type="singleValue">normal</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderColor"><Name type="singleValue">BorderColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#000000</Value><DisplayName type="singleValue">Border color</DisplayName><Description type="singleValue">Set border color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontColor"><Name type="singleValue">FontColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#0080ff</Value><DisplayName type="singleValue">Font color</DisplayName><Description type="singleValue">Set font color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BackGroundColor"><Name type="singleValue">BackGroundColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#ffffff</Value><DisplayName type="singleValue">Background color</DisplayName><Description type="singleValue">Set background color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderThikness"><Name type="singleValue">BorderThikness</Name><Type type="singleValue">input</Type><Value type="singleValue">2</Value><DisplayName type="singleValue">Border thikness</DisplayName><Description type="singleValue">Set border thikness in pixel</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderStyle"><Name type="singleValue">BorderStyle</Name><Type type="singleValue">Select</Type><Value type="array"><element>solid</element><element>dashed</element><element>dotted</element></Value><DisplayName type="singleValue">Border style</DisplayName><Description type="singleValue">Select boreder style</Description><SelectedValue type="singleValue">solid</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter></usedPlugin><usedPlugin category="installed" type="LabelPlugin" PageSource="undefined"><location><x>29</x><y>103</y></location><Parameter name="TimeFormat"><Name type="singleValue">TimeFormat</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationAliase"><Name type="singleValue">EquationAliase</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationText"><Name type="singleValue">EquationText</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ShowExtraReadingsFirst"><Name type="singleValue">ShowExtraReadingsFirst</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ExtraSensorReadings"><Name type="singleValue">ExtraSensorReadings</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ReffrenceWithAlias"><Name type="singleValue">ReffrenceWithAlias</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PageSource"><Name type="singleValue">PageSource</Name><Type type="singleValue">label</Type><Value type="singleValue">0</Value><DisplayName type="singleValue">Page Source</DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TypeOfPlugin"><Name type="singleValue">TypeOfPlugin</Name><Type type="singleValue">label</Type><Value type="singleValue">LabelPlugin</Value><DisplayName type="singleValue">Plugin Type</DisplayName><Description type="singleValue">Show the type of plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginCategory"><Name type="singleValue">PluginCategory</Name><Type type="singleValue">label</Type><Value type="singleValue">installed</Value><DisplayName type="singleValue">Plugin Category</DisplayName><Description type="singleValue">Show category of plugin custom or installed</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginName"><Name type="singleValue">PluginName</Name><Type type="singleValue">input</Type><Value type="singleValue">phoneLabel</Value><DisplayName type="singleValue">Plugin name</DisplayName><Description type="singleValue">Set plugin name</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationX"><Name type="singleValue">LocationX</Name><Type type="singleValue">input</Type><Value type="singleValue">29</Value><DisplayName type="singleValue">Location of X axis</DisplayName><Description type="singleValue">Location of X axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationY"><Name type="singleValue">LocationY</Name><Type type="singleValue">input</Type><Value type="singleValue">103</Value><DisplayName type="singleValue">Location of Y axis</DisplayName><Description type="singleValue">Location of Y axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginWidth"><Name type="singleValue">PluginWidth</Name><Type type="singleValue">input</Type><Value type="singleValue">62</Value><DisplayName type="singleValue">Plugin Width</DisplayName><Description type="singleValue">Set image width</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginHeight"><Name type="singleValue">PluginHeight</Name><Type type="singleValue">input</Type><Value type="singleValue">32</Value><DisplayName type="singleValue">Plugin Height</DisplayName><Description type="singleValue">Set image height</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Visible"><Name type="singleValue">Visible</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Visible</DisplayName><Description type="singleValue">Show/Hide the plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="CssClass"><Name type="singleValue">CssClass</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Css Classes</DisplayName><Description type="singleValue">Set Css Classes (Comma separated) for this Plugin Ex:disabled,info</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="DataSource"><Name type="singleValue">DataSource</Name><Type type="singleValue">SensorsList</Type><Value type="singleValue">No SensorNo Reading</Value><DisplayName type="singleValue">Data Source</DisplayName><Description type="singleValue">Select Data Source</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Query"><Name type="singleValue">Query</Name><Type type="singleValue">DataSet</Type><Value type="singleValue"/><DisplayName type="singleValue">SQL query statement</DisplayName><Description type="singleValue">Set SQL query statement to be executed to retrieve Data</Description><Data type="singleValue"/><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HelpTip"><Name type="singleValue">HelpTip</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Help Tip</DisplayName><Description type="singleValue">Appears When mouseover</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onclick"><Name type="singleValue">onclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">click event</DisplayName><Description type="singleValue">click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ondbclick"><Name type="singleValue">ondbclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">dbclick event</DisplayName><Description type="singleValue">double click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onmouseover"><Name type="singleValue">onmouseover</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">mouseover event</DisplayName><Description type="singleValue">on mouseover event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LabelValue"><Name type="singleValue">LabelValue</Name><Type type="singleValue">input</Type><Value type="singleValue">Phone Number</Value><DisplayName type="singleValue">Caption</DisplayName><Description type="singleValue">Set label caption</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="MultipleLine"><Name type="singleValue">MultipleLine</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Multiple lines</DisplayName><Description type="singleValue">Enable/disable multiple lines to control the width and hight of label</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Scroll"><Name type="singleValue">Scroll</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Scroll</DisplayName><Description type="singleValue">Enable/disable Scroll feature when multiple lines parameter is true</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HasBorder"><Name type="singleValue">HasBorder</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Show border</DisplayName><Description type="singleValue">Show/hide border</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderRounded"><Name type="singleValue">BorderRounded</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Rounded border</DisplayName><Description type="singleValue">Enable/disable rounded border</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TextRotation"><Name type="singleValue">TextRotation</Name><Type type="singleValue">Select</Type><Value type="array"><element>rotate(0deg)</element><element>rotate(90deg)</element><element>rotate(270deg)</element></Value><DisplayName type="singleValue">Rotation</DisplayName><Description type="singleValue">Select rotation angle for text</Description><SelectedValue type="singleValue">rotate(0deg)</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontSize"><Name type="singleValue">FontSize</Name><Type type="singleValue">Select</Type><Value type="array"><element>14px</element><element>17px</element><element>20px</element><element>22px</element><element>24px</element><element>26px</element><element>28px</element></Value><DisplayName type="singleValue">Font size</DisplayName><Description type="singleValue">Select font size</Description><SelectedValue type="singleValue">14px</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontFamily"><Name type="singleValue">FontFamily</Name><Type type="singleValue">Select</Type><Value type="array"><element>Arial</element><element>Courrier New</element><element>Times New Roman</element></Value><DisplayName type="singleValue">Font Family</DisplayName><Description type="singleValue">The fontFamily property sets a list of font-family names for text</Description><SelectedValue type="singleValue">Arial</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontStyle"><Name type="singleValue">FontStyle</Name><Type type="singleValue">Select</Type><Value type="array"><element>normal</element><element>italic</element><element>oblique</element><element>initial</element></Value><DisplayName type="singleValue">Font style</DisplayName><Description type="singleValue">Select font style</Description><SelectedValue type="singleValue">normal</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontWeight"><Name type="singleValue">FontWeight</Name><Type type="singleValue">Select</Type><Value type="array"><element>normal</element><element>bold</element><element>bolder</element><element>lighter</element><element>100</element><element>200</element><element>300</element><element>400</element><element>500</element><element>600</element><element>700</element><element>800</element><element>900</element></Value><DisplayName type="singleValue">Font weight</DisplayName><Description type="singleValue">Select font weight</Description><SelectedValue type="singleValue">normal</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderColor"><Name type="singleValue">BorderColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#000000</Value><DisplayName type="singleValue">Border color</DisplayName><Description type="singleValue">Set border color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontColor"><Name type="singleValue">FontColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#000000</Value><DisplayName type="singleValue">Font color</DisplayName><Description type="singleValue">Set font color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BackGroundColor"><Name type="singleValue">BackGroundColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#ffffff</Value><DisplayName type="singleValue">Background color</DisplayName><Description type="singleValue">Set background color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderThikness"><Name type="singleValue">BorderThikness</Name><Type type="singleValue">input</Type><Value type="singleValue">2</Value><DisplayName type="singleValue">Border thikness</DisplayName><Description type="singleValue">Set border thikness in pixel</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderStyle"><Name type="singleValue">BorderStyle</Name><Type type="singleValue">Select</Type><Value type="array"><element>solid</element><element>dashed</element><element>dotted</element></Value><DisplayName type="singleValue">Border style</DisplayName><Description type="singleValue">Select boreder style</Description><SelectedValue type="singleValue">solid</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter></usedPlugin><usedPlugin category="installed" type="LabelPlugin" PageSource="undefined"><location><x>50</x><y>191</y></location><Parameter name="TimeFormat"><Name type="singleValue">TimeFormat</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationAliase"><Name type="singleValue">EquationAliase</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationText"><Name type="singleValue">EquationText</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ShowExtraReadingsFirst"><Name type="singleValue">ShowExtraReadingsFirst</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ExtraSensorReadings"><Name type="singleValue">ExtraSensorReadings</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ReffrenceWithAlias"><Name type="singleValue">ReffrenceWithAlias</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PageSource"><Name type="singleValue">PageSource</Name><Type type="singleValue">label</Type><Value type="singleValue">0</Value><DisplayName type="singleValue">Page Source</DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TypeOfPlugin"><Name type="singleValue">TypeOfPlugin</Name><Type type="singleValue">label</Type><Value type="singleValue">LabelPlugin</Value><DisplayName type="singleValue">Plugin Type</DisplayName><Description type="singleValue">Show the type of plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginCategory"><Name type="singleValue">PluginCategory</Name><Type type="singleValue">label</Type><Value type="singleValue">installed</Value><DisplayName type="singleValue">Plugin Category</DisplayName><Description type="singleValue">Show category of plugin custom or installed</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginName"><Name type="singleValue">PluginName</Name><Type type="singleValue">input</Type><Value type="singleValue">flashToggleLabel</Value><DisplayName type="singleValue">Plugin name</DisplayName><Description type="singleValue">Set plugin name</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationX"><Name type="singleValue">LocationX</Name><Type type="singleValue">input</Type><Value type="singleValue">50</Value><DisplayName type="singleValue">Location of X axis</DisplayName><Description type="singleValue">Location of X axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationY"><Name type="singleValue">LocationY</Name><Type type="singleValue">input</Type><Value type="singleValue">191</Value><DisplayName type="singleValue">Location of Y axis</DisplayName><Description type="singleValue">Location of Y axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginWidth"><Name type="singleValue">PluginWidth</Name><Type type="singleValue">input</Type><Value type="singleValue">50</Value><DisplayName type="singleValue">Plugin Width</DisplayName><Description type="singleValue">Set image width</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginHeight"><Name type="singleValue">PluginHeight</Name><Type type="singleValue">input</Type><Value type="singleValue">30</Value><DisplayName type="singleValue">Plugin Height</DisplayName><Description type="singleValue">Set image height</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Visible"><Name type="singleValue">Visible</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Visible</DisplayName><Description type="singleValue">Show/Hide the plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="CssClass"><Name type="singleValue">CssClass</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Css Classes</DisplayName><Description type="singleValue">Set Css Classes (Comma separated) for this Plugin Ex:disabled,info</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="DataSource"><Name type="singleValue">DataSource</Name><Type type="singleValue">SensorsList</Type><Value type="singleValue">No SensorNo Reading</Value><DisplayName type="singleValue">Data Source</DisplayName><Description type="singleValue">Select Data Source</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Query"><Name type="singleValue">Query</Name><Type type="singleValue">DataSet</Type><Value type="singleValue"/><DisplayName type="singleValue">SQL query statement</DisplayName><Description type="singleValue">Set SQL query statement to be executed to retrieve Data</Description><Data type="singleValue"/><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HelpTip"><Name type="singleValue">HelpTip</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Help Tip</DisplayName><Description type="singleValue">Appears When mouseover</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onclick"><Name type="singleValue">onclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">click event</DisplayName><Description type="singleValue">click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ondbclick"><Name type="singleValue">ondbclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">dbclick event</DisplayName><Description type="singleValue">double click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onmouseover"><Name type="singleValue">onmouseover</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">mouseover event</DisplayName><Description type="singleValue">on mouseover event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LabelValue"><Name type="singleValue">LabelValue</Name><Type type="singleValue">input</Type><Value type="singleValue">Flash</Value><DisplayName type="singleValue">Caption</DisplayName><Description type="singleValue">Set label caption</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="MultipleLine"><Name type="singleValue">MultipleLine</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Multiple lines</DisplayName><Description type="singleValue">Enable/disable multiple lines to control the width and hight of label</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Scroll"><Name type="singleValue">Scroll</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Scroll</DisplayName><Description type="singleValue">Enable/disable Scroll feature when multiple lines parameter is true</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HasBorder"><Name type="singleValue">HasBorder</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Show border</DisplayName><Description type="singleValue">Show/hide border</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderRounded"><Name type="singleValue">BorderRounded</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Rounded border</DisplayName><Description type="singleValue">Enable/disable rounded border</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TextRotation"><Name type="singleValue">TextRotation</Name><Type type="singleValue">Select</Type><Value type="array"><element>rotate(0deg)</element><element>rotate(90deg)</element><element>rotate(270deg)</element></Value><DisplayName type="singleValue">Rotation</DisplayName><Description type="singleValue">Select rotation angle for text</Description><SelectedValue type="singleValue">rotate(0deg)</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontSize"><Name type="singleValue">FontSize</Name><Type type="singleValue">Select</Type><Value type="array"><element>14px</element><element>17px</element><element>20px</element><element>22px</element><element>24px</element><element>26px</element><element>28px</element></Value><DisplayName type="singleValue">Font size</DisplayName><Description type="singleValue">Select font size</Description><SelectedValue type="singleValue">14px</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontFamily"><Name type="singleValue">FontFamily</Name><Type type="singleValue">Select</Type><Value type="array"><element>Arial</element><element>Courrier New</element><element>Times New Roman</element></Value><DisplayName type="singleValue">Font Family</DisplayName><Description type="singleValue">The fontFamily property sets a list of font-family names for text</Description><SelectedValue type="singleValue">Arial</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontStyle"><Name type="singleValue">FontStyle</Name><Type type="singleValue">Select</Type><Value type="array"><element>normal</element><element>italic</element><element>oblique</element><element>initial</element></Value><DisplayName type="singleValue">Font style</DisplayName><Description type="singleValue">Select font style</Description><SelectedValue type="singleValue">normal</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontWeight"><Name type="singleValue">FontWeight</Name><Type type="singleValue">Select</Type><Value type="array"><element>normal</element><element>bold</element><element>bolder</element><element>lighter</element><element>100</element><element>200</element><element>300</element><element>400</element><element>500</element><element>600</element><element>700</element><element>800</element><element>900</element></Value><DisplayName type="singleValue">Font weight</DisplayName><Description type="singleValue">Select font weight</Description><SelectedValue type="singleValue">normal</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderColor"><Name type="singleValue">BorderColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#000000</Value><DisplayName type="singleValue">Border color</DisplayName><Description type="singleValue">Set border color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontColor"><Name type="singleValue">FontColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#000000</Value><DisplayName type="singleValue">Font color</DisplayName><Description type="singleValue">Set font color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BackGroundColor"><Name type="singleValue">BackGroundColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#ffffff</Value><DisplayName type="singleValue">Background color</DisplayName><Description type="singleValue">Set background color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderThikness"><Name type="singleValue">BorderThikness</Name><Type type="singleValue">input</Type><Value type="singleValue">2</Value><DisplayName type="singleValue">Border thikness</DisplayName><Description type="singleValue">Set border thikness in pixel</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderStyle"><Name type="singleValue">BorderStyle</Name><Type type="singleValue">Select</Type><Value type="array"><element>solid</element><element>dashed</element><element>dotted</element></Value><DisplayName type="singleValue">Border style</DisplayName><Description type="singleValue">Select boreder style</Description><SelectedValue type="singleValue">solid</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter></usedPlugin><usedPlugin category="installed" type="LabelPlugin" PageSource="undefined"><location><x>19</x><y>301</y></location><Parameter name="TimeFormat"><Name type="singleValue">TimeFormat</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationAliase"><Name type="singleValue">EquationAliase</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationText"><Name type="singleValue">EquationText</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ShowExtraReadingsFirst"><Name type="singleValue">ShowExtraReadingsFirst</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ExtraSensorReadings"><Name type="singleValue">ExtraSensorReadings</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ReffrenceWithAlias"><Name type="singleValue">ReffrenceWithAlias</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PageSource"><Name type="singleValue">PageSource</Name><Type type="singleValue">label</Type><Value type="singleValue">0</Value><DisplayName type="singleValue">Page Source</DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TypeOfPlugin"><Name type="singleValue">TypeOfPlugin</Name><Type type="singleValue">label</Type><Value type="singleValue">LabelPlugin</Value><DisplayName type="singleValue">Plugin Type</DisplayName><Description type="singleValue">Show the type of plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginCategory"><Name type="singleValue">PluginCategory</Name><Type type="singleValue">label</Type><Value type="singleValue">installed</Value><DisplayName type="singleValue">Plugin Category</DisplayName><Description type="singleValue">Show category of plugin custom or installed</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginName"><Name type="singleValue">PluginName</Name><Type type="singleValue">input</Type><Value type="singleValue">flashDurationLabel</Value><DisplayName type="singleValue">Plugin name</DisplayName><Description type="singleValue">Set plugin name</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationX"><Name type="singleValue">LocationX</Name><Type type="singleValue">input</Type><Value type="singleValue">19</Value><DisplayName type="singleValue">Location of X axis</DisplayName><Description type="singleValue">Location of X axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationY"><Name type="singleValue">LocationY</Name><Type type="singleValue">input</Type><Value type="singleValue">301</Value><DisplayName type="singleValue">Location of Y axis</DisplayName><Description type="singleValue">Location of Y axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginWidth"><Name type="singleValue">PluginWidth</Name><Type type="singleValue">input</Type><Value type="singleValue">auto</Value><DisplayName type="singleValue">Plugin Width</DisplayName><Description type="singleValue">Set image width</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginHeight"><Name type="singleValue">PluginHeight</Name><Type type="singleValue">input</Type><Value type="singleValue">auto</Value><DisplayName type="singleValue">Plugin Height</DisplayName><Description type="singleValue">Set image height</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Visible"><Name type="singleValue">Visible</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Visible</DisplayName><Description type="singleValue">Show/Hide the plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="CssClass"><Name type="singleValue">CssClass</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Css Classes</DisplayName><Description type="singleValue">Set Css Classes (Comma separated) for this Plugin Ex:disabled,info</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="DataSource"><Name type="singleValue">DataSource</Name><Type type="singleValue">SensorsList</Type><Value type="singleValue">No SensorNo Reading</Value><DisplayName type="singleValue">Data Source</DisplayName><Description type="singleValue">Select Data Source</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Query"><Name type="singleValue">Query</Name><Type type="singleValue">DataSet</Type><Value type="singleValue"/><DisplayName type="singleValue">SQL query statement</DisplayName><Description type="singleValue">Set SQL query statement to be executed to retrieve Data</Description><Data type="singleValue"/><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HelpTip"><Name type="singleValue">HelpTip</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Help Tip</DisplayName><Description type="singleValue">Appears When mouseover</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onclick"><Name type="singleValue">onclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">click event</DisplayName><Description type="singleValue">click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ondbclick"><Name type="singleValue">ondbclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">dbclick event</DisplayName><Description type="singleValue">double click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onmouseover"><Name type="singleValue">onmouseover</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">mouseover event</DisplayName><Description type="singleValue">on mouseover event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LabelValue"><Name type="singleValue">LabelValue</Name><Type type="singleValue">input</Type><Value type="singleValue">Flash Duration</Value><DisplayName type="singleValue">Caption</DisplayName><Description type="singleValue">Set label caption</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="MultipleLine"><Name type="singleValue">MultipleLine</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Multiple lines</DisplayName><Description type="singleValue">Enable/disable multiple lines to control the width and hight of label</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Scroll"><Name type="singleValue">Scroll</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Scroll</DisplayName><Description type="singleValue">Enable/disable Scroll feature when multiple lines parameter is true</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HasBorder"><Name type="singleValue">HasBorder</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Show border</DisplayName><Description type="singleValue">Show/hide border</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderRounded"><Name type="singleValue">BorderRounded</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Rounded border</DisplayName><Description type="singleValue">Enable/disable rounded border</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TextRotation"><Name type="singleValue">TextRotation</Name><Type type="singleValue">Select</Type><Value type="array"><element>rotate(0deg)</element><element>rotate(90deg)</element><element>rotate(270deg)</element></Value><DisplayName type="singleValue">Rotation</DisplayName><Description type="singleValue">Select rotation angle for text</Description><SelectedValue type="singleValue">rotate(0deg)</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontSize"><Name type="singleValue">FontSize</Name><Type type="singleValue">Select</Type><Value type="array"><element>14px</element><element>17px</element><element>20px</element><element>22px</element><element>24px</element><element>26px</element><element>28px</element></Value><DisplayName type="singleValue">Font size</DisplayName><Description type="singleValue">Select font size</Description><SelectedValue type="singleValue">14px</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontFamily"><Name type="singleValue">FontFamily</Name><Type type="singleValue">Select</Type><Value type="array"><element>Arial</element><element>Courrier New</element><element>Times New Roman</element></Value><DisplayName type="singleValue">Font Family</DisplayName><Description type="singleValue">The fontFamily property sets a list of font-family names for text</Description><SelectedValue type="singleValue">Arial</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontStyle"><Name type="singleValue">FontStyle</Name><Type type="singleValue">Select</Type><Value type="array"><element>normal</element><element>italic</element><element>oblique</element><element>initial</element></Value><DisplayName type="singleValue">Font style</DisplayName><Description type="singleValue">Select font style</Description><SelectedValue type="singleValue">normal</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontWeight"><Name type="singleValue">FontWeight</Name><Type type="singleValue">Select</Type><Value type="array"><element>normal</element><element>bold</element><element>bolder</element><element>lighter</element><element>100</element><element>200</element><element>300</element><element>400</element><element>500</element><element>600</element><element>700</element><element>800</element><element>900</element></Value><DisplayName type="singleValue">Font weight</DisplayName><Description type="singleValue">Select font weight</Description><SelectedValue type="singleValue">normal</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderColor"><Name type="singleValue">BorderColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#000000</Value><DisplayName type="singleValue">Border color</DisplayName><Description type="singleValue">Set border color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontColor"><Name type="singleValue">FontColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#000000</Value><DisplayName type="singleValue">Font color</DisplayName><Description type="singleValue">Set font color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BackGroundColor"><Name type="singleValue">BackGroundColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#ffffff</Value><DisplayName type="singleValue">Background color</DisplayName><Description type="singleValue">Set background color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderThikness"><Name type="singleValue">BorderThikness</Name><Type type="singleValue">input</Type><Value type="singleValue">2</Value><DisplayName type="singleValue">Border thikness</DisplayName><Description type="singleValue">Set border thikness in pixel</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderStyle"><Name type="singleValue">BorderStyle</Name><Type type="singleValue">Select</Type><Value type="array"><element>solid</element><element>dashed</element><element>dotted</element></Value><DisplayName type="singleValue">Border style</DisplayName><Description type="singleValue">Select boreder style</Description><SelectedValue type="singleValue">solid</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter></usedPlugin><usedPlugin category="installed" type="InputTextPlugin" PageSource="undefined"><location><x>220</x><y>100</y></location><Parameter name="TimeFormat"><Name type="singleValue">TimeFormat</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationAliase"><Name type="singleValue">EquationAliase</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationText"><Name type="singleValue">EquationText</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ShowExtraReadingsFirst"><Name type="singleValue">ShowExtraReadingsFirst</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ExtraSensorReadings"><Name type="singleValue">ExtraSensorReadings</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ReffrenceWithAlias"><Name type="singleValue">ReffrenceWithAlias</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PageSource"><Name type="singleValue">PageSource</Name><Type type="singleValue">label</Type><Value type="singleValue">0</Value><DisplayName type="singleValue">Page Source</DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TypeOfPlugin"><Name type="singleValue">TypeOfPlugin</Name><Type type="singleValue">label</Type><Value type="singleValue">InputTextPlugin</Value><DisplayName type="singleValue">Plugin Type</DisplayName><Description type="singleValue">Show the type of plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginCategory"><Name type="singleValue">PluginCategory</Name><Type type="singleValue">label</Type><Value type="singleValue">installed</Value><DisplayName type="singleValue">Plugin Category</DisplayName><Description type="singleValue">Show category of plugin custom or installed</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginName"><Name type="singleValue">PluginName</Name><Type type="singleValue">input</Type><Value type="singleValue">phoneNumber</Value><DisplayName type="singleValue">Plugin name</DisplayName><Description type="singleValue">Set plugin name</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationX"><Name type="singleValue">LocationX</Name><Type type="singleValue">input</Type><Value type="singleValue">220</Value><DisplayName type="singleValue">Location of X axis</DisplayName><Description type="singleValue">Location of X axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationY"><Name type="singleValue">LocationY</Name><Type type="singleValue">input</Type><Value type="singleValue">100</Value><DisplayName type="singleValue">Location of Y axis</DisplayName><Description type="singleValue">Location of Y axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginWidth"><Name type="singleValue">PluginWidth</Name><Type type="singleValue">input</Type><Value type="singleValue">197</Value><DisplayName type="singleValue">Plugin Width</DisplayName><Description type="singleValue">Set image width</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginHeight"><Name type="singleValue">PluginHeight</Name><Type type="singleValue">input</Type><Value type="singleValue">26</Value><DisplayName type="singleValue">Plugin Height</DisplayName><Description type="singleValue">Set image height</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Visible"><Name type="singleValue">Visible</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Visible</DisplayName><Description type="singleValue">Show/Hide the plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="CssClass"><Name type="singleValue">CssClass</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Css Classes</DisplayName><Description type="singleValue">Set Css Classes (Comma separated) for this Plugin Ex:disabled,info</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HelpTip"><Name type="singleValue">HelpTip</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Help Tip</DisplayName><Description type="singleValue">Appears When mouseover</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onclick"><Name type="singleValue">onclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">click event</DisplayName><Description type="singleValue">click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ondbclick"><Name type="singleValue">ondbclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">dbclick event</DisplayName><Description type="singleValue">double click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onmouseover"><Name type="singleValue">onmouseover</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">mouseover event</DisplayName><Description type="singleValue">on mouseover event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TextAlighn"><Name type="singleValue">TextAlighn</Name><Type type="singleValue">Select</Type><Value type="array"><element>left</element><element>center</element><element>right</element></Value><DisplayName type="singleValue">Text Alignment</DisplayName><Description type="singleValue">Select text alignment</Description><SelectedValue type="singleValue">left</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Value"><Name type="singleValue">Value</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Text</DisplayName><Description type="singleValue">Show text value</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontSize"><Name type="singleValue">FontSize</Name><Type type="singleValue">Select</Type><Value type="array"><element>14px</element><element>17px</element><element>20px</element><element>22px</element><element>24px</element><element>26px</element><element>28px</element></Value><DisplayName type="singleValue">Font size</DisplayName><Description type="singleValue">Select font size</Description><SelectedValue type="singleValue">14px</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontColor"><Name type="singleValue">FontColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#050000</Value><DisplayName type="singleValue">Font color</DisplayName><Description type="singleValue">Set font color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontFamily"><Name type="singleValue">FontFamily</Name><Type type="singleValue">Select</Type><Value type="array"><element>Arial</element><element>Courrier New</element><element>Times New Roman</element></Value><DisplayName type="singleValue">Font family</DisplayName><Description type="singleValue">Select font family</Description><SelectedValue type="singleValue">Arial</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="placeholder"><Name type="singleValue">placeholder</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">placeholder</DisplayName><Description type="singleValue">enable/disable place holder</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PlaceholderCaption"><Name type="singleValue">PlaceholderCaption</Name><Type type="singleValue">input</Type><Value type="singleValue">phone number</Value><DisplayName type="singleValue">placeholder caption</DisplayName><Description type="singleValue">Set Placeholder Caption</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="InputType"><Name type="singleValue">InputType</Name><Type type="singleValue">Select</Type><Value type="array"><element>default</element><element>password</element></Value><DisplayName type="singleValue">Type</DisplayName><Description type="singleValue">Select the plugin type if text or password</Description><SelectedValue type="singleValue">password</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="RegExPattern"><Name type="singleValue">RegExPattern</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Validation Regular Expression</DisplayName><Description type="singleValue">'If is not empty, the content of the text box will be validated against it. The validation uses regular expressions (Javascript regular expressions in particular)</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ErrorPatternMsg"><Name type="singleValue">ErrorPatternMsg</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Pattern Error msg</DisplayName><Description type="singleValue">Set Pattern Error msg </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderSize"><Name type="singleValue">BorderSize</Name><Type type="singleValue">input</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Border size</DisplayName><Description type="singleValue">Set border size</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ErrorBorderColor"><Name type="singleValue">ErrorBorderColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#f12020</Value><DisplayName type="singleValue">Error Border Color</DisplayName><Description type="singleValue">Set border color in error case</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="SuccessBorderColor"><Name type="singleValue">SuccessBorderColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#229b20</Value><DisplayName type="singleValue">Success Border Color</DisplayName><Description type="singleValue">Set border color in success case</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter></usedPlugin><usedPlugin category="installed" type="RadioButtonPlugin" PageSource="undefined"><location><x>172</x><y>214</y></location><Parameter name="TimeFormat"><Name type="singleValue">TimeFormat</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationAliase"><Name type="singleValue">EquationAliase</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationText"><Name type="singleValue">EquationText</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ShowExtraReadingsFirst"><Name type="singleValue">ShowExtraReadingsFirst</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ExtraSensorReadings"><Name type="singleValue">ExtraSensorReadings</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ReffrenceWithAlias"><Name type="singleValue">ReffrenceWithAlias</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PageSource"><Name type="singleValue">PageSource</Name><Type type="singleValue">label</Type><Value type="singleValue">0</Value><DisplayName type="singleValue">Page Source</DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TypeOfPlugin"><Name type="singleValue">TypeOfPlugin</Name><Type type="singleValue">label</Type><Value type="singleValue">RadioButtonPlugin</Value><DisplayName type="singleValue">Plugin Type</DisplayName><Description type="singleValue">Show the type of plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginCategory"><Name type="singleValue">PluginCategory</Name><Type type="singleValue">label</Type><Value type="singleValue">installed</Value><DisplayName type="singleValue">Plugin Category</DisplayName><Description type="singleValue">Show category of plugin custom or installed</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginName"><Name type="singleValue">PluginName</Name><Type type="singleValue">input</Type><Value type="singleValue">flashRadioBtn</Value><DisplayName type="singleValue">Plugin name</DisplayName><Description type="singleValue">Plugin name</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationX"><Name type="singleValue">LocationX</Name><Type type="singleValue">input</Type><Value type="singleValue">172</Value><DisplayName type="singleValue">Location of X axis</DisplayName><Description type="singleValue">Location of X axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationY"><Name type="singleValue">LocationY</Name><Type type="singleValue">input</Type><Value type="singleValue">214</Value><DisplayName type="singleValue">Location of Y axis</DisplayName><Description type="singleValue">Location of Y axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginWidth"><Name type="singleValue">PluginWidth</Name><Type type="singleValue">input</Type><Value type="singleValue">182</Value><DisplayName type="singleValue">Plugin Width</DisplayName><Description type="singleValue">Set image width</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginHeight"><Name type="singleValue">PluginHeight</Name><Type type="singleValue">input</Type><Value type="singleValue">27</Value><DisplayName type="singleValue">Plugin Height</DisplayName><Description type="singleValue">Set image height</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Visible"><Name type="singleValue">Visible</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Visible</DisplayName><Description type="singleValue">Show/Hide the plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="CssClass"><Name type="singleValue">CssClass</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Css Classes</DisplayName><Description type="singleValue">Set Css Classes (Comma separated) for this Plugin Ex:disabled,info</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HelpTip"><Name type="singleValue">HelpTip</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Help Tip</DisplayName><Description type="singleValue">Appears When mouseover</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onclick"><Name type="singleValue">onclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">click event</DisplayName><Description type="singleValue">click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ondbclick"><Name type="singleValue">ondbclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">dbclick event</DisplayName><Description type="singleValue">double click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onmouseover"><Name type="singleValue">onmouseover</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">mouseover event</DisplayName><Description type="singleValue">on mouseover event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TextAlighn"><Name type="singleValue">TextAlighn</Name><Type type="singleValue">Select</Type><Value type="array"><element>left</element><element>center</element><element>right</element></Value><DisplayName type="singleValue">Text alignment</DisplayName><Description type="singleValue">Select text alignment</Description><SelectedValue type="singleValue">left</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="InLine"><Name type="singleValue">InLine</Name><Type type="singleValue">Select</Type><Value type="array"><element>true</element><element>false</element></Value><DisplayName type="singleValue">Align vertically</DisplayName><Description type="singleValue">Select the alignment vertically</Description><SelectedValue type="singleValue">false</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Custom"><Name type="singleValue">Custom</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Custom image</DisplayName><Description type="singleValue">Enable/disable using custom image for the radio button </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="IconSize"><Name type="singleValue">IconSize</Name><Type type="singleValue">input</Type><Value type="singleValue">8</Value><DisplayName type="singleValue">Radio button size</DisplayName><Description type="singleValue">Set radio button size </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Selected"><Name type="singleValue">Selected</Name><Type type="singleValue">input</Type><Value type="singleValue">On</Value><DisplayName type="singleValue">Selected item</DisplayName><Description type="singleValue">Show selected item</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="CheckedIcon"><Name type="singleValue">CheckedIcon</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Custom checked image</DisplayName><Description type="singleValue">Set custom image for the checked state</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="UncheckedIcon"><Name type="singleValue">UncheckedIcon</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Custom unchecked image</DisplayName><Description type="singleValue">Set custom image for the unchecked state</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontSize"><Name type="singleValue">FontSize</Name><Type type="singleValue">Select</Type><Value type="array"><element>14px</element><element>17px</element><element>20px</element><element>22px</element><element>24px</element><element>26px</element><element>28px</element></Value><DisplayName type="singleValue">Font size</DisplayName><Description type="singleValue">Select font size</Description><SelectedValue type="singleValue">14px</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="GetStyle"><Name type="singleValue">GetStyle</Name><Type type="singleValue">Select</Type><Value type="array"><element>RadioButtonStyle1</element><element>RadioButtonStyle2</element><element>RadioButtonStyle3</element><element>RadioButtonStyle4</element></Value><DisplayName type="singleValue">Radio button style</DisplayName><Description type="singleValue">Select style for radio button</Description><SelectedValue type="singleValue">RadioButtonStyle1</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontColor"><Name type="singleValue">FontColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#000000</Value><DisplayName type="singleValue">Font color</DisplayName><Description type="singleValue">Set font color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HasBorder"><Name type="singleValue">HasBorder</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Show border</DisplayName><Description type="singleValue">Show/hide border</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderSize"><Name type="singleValue">BorderSize</Name><Type type="singleValue">input</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Border width</DisplayName><Description type="singleValue">Set border width</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Option"><Name type="singleValue">Option</Name><Type type="singleValue">input</Type><Value type="singleValue">ON,OFF</Value><DisplayName type="singleValue">Radio button captions</DisplayName><Description type="singleValue">Set radio button captions comma separated values i.e radio1,radio2,..,..</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderColor"><Name type="singleValue">BorderColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#000000</Value><DisplayName type="singleValue">Border color</DisplayName><Description type="singleValue">Set border color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontFamily"><Name type="singleValue">FontFamily</Name><Type type="singleValue">Select</Type><Value type="array"><element>Arial</element><element>Courrier New</element><element>Times New Roman</element></Value><DisplayName type="singleValue">Font family</DisplayName><Description type="singleValue">Select font family</Description><SelectedValue type="singleValue">Arial</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter></usedPlugin><usedPlugin category="installed" type="InputTextPlugin" PageSource="undefined"><location><x>163</x><y>298</y></location><Parameter name="TimeFormat"><Name type="singleValue">TimeFormat</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationAliase"><Name type="singleValue">EquationAliase</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationText"><Name type="singleValue">EquationText</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ShowExtraReadingsFirst"><Name type="singleValue">ShowExtraReadingsFirst</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ExtraSensorReadings"><Name type="singleValue">ExtraSensorReadings</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ReffrenceWithAlias"><Name type="singleValue">ReffrenceWithAlias</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PageSource"><Name type="singleValue">PageSource</Name><Type type="singleValue">label</Type><Value type="singleValue">0</Value><DisplayName type="singleValue">Page Source</DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TypeOfPlugin"><Name type="singleValue">TypeOfPlugin</Name><Type type="singleValue">label</Type><Value type="singleValue">InputTextPlugin</Value><DisplayName type="singleValue">Plugin Type</DisplayName><Description type="singleValue">Show the type of plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginCategory"><Name type="singleValue">PluginCategory</Name><Type type="singleValue">label</Type><Value type="singleValue">installed</Value><DisplayName type="singleValue">Plugin Category</DisplayName><Description type="singleValue">Show category of plugin custom or installed</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginName"><Name type="singleValue">PluginName</Name><Type type="singleValue">input</Type><Value type="singleValue">flashDuration</Value><DisplayName type="singleValue">Plugin name</DisplayName><Description type="singleValue">Set plugin name</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationX"><Name type="singleValue">LocationX</Name><Type type="singleValue">input</Type><Value type="singleValue">163</Value><DisplayName type="singleValue">Location of X axis</DisplayName><Description type="singleValue">Location of X axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationY"><Name type="singleValue">LocationY</Name><Type type="singleValue">input</Type><Value type="singleValue">298</Value><DisplayName type="singleValue">Location of Y axis</DisplayName><Description type="singleValue">Location of Y axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginWidth"><Name type="singleValue">PluginWidth</Name><Type type="singleValue">input</Type><Value type="singleValue">197</Value><DisplayName type="singleValue">Plugin Width</DisplayName><Description type="singleValue">Set image width</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginHeight"><Name type="singleValue">PluginHeight</Name><Type type="singleValue">input</Type><Value type="singleValue">26</Value><DisplayName type="singleValue">Plugin Height</DisplayName><Description type="singleValue">Set image height</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Visible"><Name type="singleValue">Visible</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Visible</DisplayName><Description type="singleValue">Show/Hide the plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="CssClass"><Name type="singleValue">CssClass</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Css Classes</DisplayName><Description type="singleValue">Set Css Classes (Comma separated) for this Plugin Ex:disabled,info</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HelpTip"><Name type="singleValue">HelpTip</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Help Tip</DisplayName><Description type="singleValue">Appears When mouseover</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onclick"><Name type="singleValue">onclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">click event</DisplayName><Description type="singleValue">click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ondbclick"><Name type="singleValue">ondbclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">dbclick event</DisplayName><Description type="singleValue">double click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onmouseover"><Name type="singleValue">onmouseover</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">mouseover event</DisplayName><Description type="singleValue">on mouseover event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TextAlighn"><Name type="singleValue">TextAlighn</Name><Type type="singleValue">Select</Type><Value type="array"><element>left</element><element>center</element><element>right</element></Value><DisplayName type="singleValue">Text Alignment</DisplayName><Description type="singleValue">Select text alignment</Description><SelectedValue type="singleValue">left</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Value"><Name type="singleValue">Value</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Text</DisplayName><Description type="singleValue">Show text value</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontSize"><Name type="singleValue">FontSize</Name><Type type="singleValue">Select</Type><Value type="array"><element>14px</element><element>17px</element><element>20px</element><element>22px</element><element>24px</element><element>26px</element><element>28px</element></Value><DisplayName type="singleValue">Font size</DisplayName><Description type="singleValue">Select font size</Description><SelectedValue type="singleValue">14px</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontColor"><Name type="singleValue">FontColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#050000</Value><DisplayName type="singleValue">Font color</DisplayName><Description type="singleValue">Set font color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontFamily"><Name type="singleValue">FontFamily</Name><Type type="singleValue">Select</Type><Value type="array"><element>Arial</element><element>Courrier New</element><element>Times New Roman</element></Value><DisplayName type="singleValue">Font family</DisplayName><Description type="singleValue">Select font family</Description><SelectedValue type="singleValue">Arial</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="placeholder"><Name type="singleValue">placeholder</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">placeholder</DisplayName><Description type="singleValue">enable/disable place holder</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PlaceholderCaption"><Name type="singleValue">PlaceholderCaption</Name><Type type="singleValue">input</Type><Value type="singleValue">in milliseconds</Value><DisplayName type="singleValue">placeholder caption</DisplayName><Description type="singleValue">Set Placeholder Caption</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="InputType"><Name type="singleValue">InputType</Name><Type type="singleValue">Select</Type><Value type="array"><element>default</element><element>password</element></Value><DisplayName type="singleValue">Type</DisplayName><Description type="singleValue">Select the plugin type if text or password</Description><SelectedValue type="singleValue">default</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="RegExPattern"><Name type="singleValue">RegExPattern</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Validation Regular Expression</DisplayName><Description type="singleValue">'If is not empty, the content of the text box will be validated against it. The validation uses regular expressions (Javascript regular expressions in particular)</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ErrorPatternMsg"><Name type="singleValue">ErrorPatternMsg</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Pattern Error msg</DisplayName><Description type="singleValue">Set Pattern Error msg </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderSize"><Name type="singleValue">BorderSize</Name><Type type="singleValue">input</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Border size</DisplayName><Description type="singleValue">Set border size</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ErrorBorderColor"><Name type="singleValue">ErrorBorderColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#f12020</Value><DisplayName type="singleValue">Error Border Color</DisplayName><Description type="singleValue">Set border color in error case</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="SuccessBorderColor"><Name type="singleValue">SuccessBorderColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#229b20</Value><DisplayName type="singleValue">Success Border Color</DisplayName><Description type="singleValue">Set border color in success case</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter></usedPlugin><usedPlugin category="installed" type="ButtonPlugin" PageSource="undefined"><location><x>365</x><y>340</y></location><Parameter name="TimeFormat"><Name type="singleValue">TimeFormat</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationAliase"><Name type="singleValue">EquationAliase</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationText"><Name type="singleValue">EquationText</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ShowExtraReadingsFirst"><Name type="singleValue">ShowExtraReadingsFirst</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ExtraSensorReadings"><Name type="singleValue">ExtraSensorReadings</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ReffrenceWithAlias"><Name type="singleValue">ReffrenceWithAlias</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PageSource"><Name type="singleValue">PageSource</Name><Type type="singleValue">label</Type><Value type="singleValue">0</Value><DisplayName type="singleValue">Page Source</DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TypeOfPlugin"><Name type="singleValue">TypeOfPlugin</Name><Type type="singleValue">label</Type><Value type="singleValue">ButtonPlugin</Value><DisplayName type="singleValue">Plugin Type</DisplayName><Description type="singleValue">Show the type of plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginCategory"><Name type="singleValue">PluginCategory</Name><Type type="singleValue">label</Type><Value type="singleValue">installed</Value><DisplayName type="singleValue">Plugin Category</DisplayName><Description type="singleValue">Show category of plugin custom or installed</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginName"><Name type="singleValue">PluginName</Name><Type type="singleValue">input</Type><Value type="singleValue">flashDurationPublish</Value><DisplayName type="singleValue">Plugin name</DisplayName><Description type="singleValue">Set plugin name</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationX"><Name type="singleValue">LocationX</Name><Type type="singleValue">input</Type><Value type="singleValue">365</Value><DisplayName type="singleValue">Location of X axis</DisplayName><Description type="singleValue">Location of X axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationY"><Name type="singleValue">LocationY</Name><Type type="singleValue">input</Type><Value type="singleValue">340</Value><DisplayName type="singleValue">Location of Y axis</DisplayName><Description type="singleValue">Location of Y axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginWidth"><Name type="singleValue">PluginWidth</Name><Type type="singleValue">input</Type><Value type="singleValue">83</Value><DisplayName type="singleValue">Plugin Width</DisplayName><Description type="singleValue">Set image width</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginHeight"><Name type="singleValue">PluginHeight</Name><Type type="singleValue">input</Type><Value type="singleValue">30</Value><DisplayName type="singleValue">Plugin Height</DisplayName><Description type="singleValue">Set image height</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Visible"><Name type="singleValue">Visible</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Visible</DisplayName><Description type="singleValue">Show/Hide the plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="CssClass"><Name type="singleValue">CssClass</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Css Classes</DisplayName><Description type="singleValue">Set Css Classes (Comma separated) for this Plugin Ex:disabled,info</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HelpTip"><Name type="singleValue">HelpTip</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Help Tip</DisplayName><Description type="singleValue">Appears When mouseover</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onclick"><Name type="singleValue">onclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">click event</DisplayName><Description type="singleValue">click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ondbclick"><Name type="singleValue">ondbclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">dbclick event</DisplayName><Description type="singleValue">double click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onmouseover"><Name type="singleValue">onmouseover</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">mouseover event</DisplayName><Description type="singleValue">on mouseover event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Caption"><Name type="singleValue">Caption</Name><Type type="singleValue">input</Type><Value type="singleValue">Publish</Value><DisplayName type="singleValue">Caption </DisplayName><Description type="singleValue">The text appearing on your button</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ButtonStyle"><Name type="singleValue">ButtonStyle</Name><Type type="singleValue">Select</Type><Value type="array"><element>default</element><element>primary</element><element>success</element><element>info</element><element>warning</element><element>danger</element></Value><DisplayName type="singleValue">Button style</DisplayName><Description type="singleValue">Select button style</Description><SelectedValue type="singleValue">success</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontFamily"><Name type="singleValue">FontFamily</Name><Type type="singleValue">Select</Type><Value type="array"><element>Arial</element><element>Courrier New</element><element>Times New Roman</element></Value><DisplayName type="singleValue">Font Family</DisplayName><Description type="singleValue">The fontFamily property sets a list of font-family names for text</Description><SelectedValue type="singleValue">Arial</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontSize"><Name type="singleValue">FontSize</Name><Type type="singleValue">input</Type><Value type="singleValue">14</Value><DisplayName type="singleValue">Font Size</DisplayName><Description type="singleValue">The fontSize property sets the font size of the text in pixels.</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontStyle"><Name type="singleValue">FontStyle</Name><Type type="singleValue">Select</Type><Value type="array"><element>normal</element><element>italic</element><element>oblique</element><element>initial</element></Value><DisplayName type="singleValue">Font Style</DisplayName><Description type="singleValue">The fontStyle property sets or returns whether the style of the font is normal, italic or oblique.</Description><SelectedValue type="singleValue">normal</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontWeight"><Name type="singleValue">FontWeight</Name><Type type="singleValue">Select</Type><Value type="array"><element>normal</element><element>bold</element><element>bolder</element><element>lighter</element><element>100</element><element>200</element><element>300</element><element>400</element><element>500</element><element>600</element><element>700</element><element>800</element><element>900</element></Value><DisplayName type="singleValue">Font Weight</DisplayName><Description type="singleValue">The fontWeight property sets or returns how thick or thin characters in a text should be displayed.</Description><SelectedValue type="singleValue">normal</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="FontColor"><Name type="singleValue">FontColor</Name><Type type="singleValue">color</Type><Value type="singleValue"/><DisplayName type="singleValue">Font Color</DisplayName><Description type="singleValue">Font color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BackgroundColor"><Name type="singleValue">BackgroundColor</Name><Type type="singleValue">color</Type><Value type="singleValue"/><DisplayName type="singleValue">Background Color</DisplayName><Description type="singleValue">Background Color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderRounded"><Name type="singleValue">BorderRounded</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Border Rounded</DisplayName><Description type="singleValue">Whether Border is Rounded</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter></usedPlugin><usedPlugin category="installed" type="LineSeparator" PageSource="undefined"><location><x>398</x><y>-290</y></location><Parameter name="TimeFormat"><Name type="singleValue">TimeFormat</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationAliase"><Name type="singleValue">EquationAliase</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationText"><Name type="singleValue">EquationText</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ShowExtraReadingsFirst"><Name type="singleValue">ShowExtraReadingsFirst</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ExtraSensorReadings"><Name type="singleValue">ExtraSensorReadings</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ReffrenceWithAlias"><Name type="singleValue">ReffrenceWithAlias</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PageSource"><Name type="singleValue">PageSource</Name><Type type="singleValue">label</Type><Value type="singleValue">0</Value><DisplayName type="singleValue">Page Source</DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TypeOfPlugin"><Name type="singleValue">TypeOfPlugin</Name><Type type="singleValue">label</Type><Value type="singleValue">LineSeparator</Value><DisplayName type="singleValue">Plugin Type</DisplayName><Description type="singleValue">Show the type of plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginCategory"><Name type="singleValue">PluginCategory</Name><Type type="singleValue">label</Type><Value type="singleValue">installed</Value><DisplayName type="singleValue">Plugin Category</DisplayName><Description type="singleValue">Show category of plugin custom or installed</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginName"><Name type="singleValue">PluginName</Name><Type type="singleValue">input</Type><Value type="singleValue">LineSeparator 1</Value><DisplayName type="singleValue">Plugin name</DisplayName><Description type="singleValue">Set plugin name</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationX"><Name type="singleValue">LocationX</Name><Type type="singleValue">input</Type><Value type="singleValue">398</Value><DisplayName type="singleValue">Location of X axis</DisplayName><Description type="singleValue">Location of X axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationY"><Name type="singleValue">LocationY</Name><Type type="singleValue">input</Type><Value type="singleValue">-290</Value><DisplayName type="singleValue">Location of Y axis</DisplayName><Description type="singleValue">Location of Y axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginWidth"><Name type="singleValue">PluginWidth</Name><Type type="singleValue">input</Type><Value type="singleValue">2</Value><DisplayName type="singleValue">Plugin Width</DisplayName><Description type="singleValue">Set image width</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginHeight"><Name type="singleValue">PluginHeight</Name><Type type="singleValue">input</Type><Value type="singleValue">900</Value><DisplayName type="singleValue">Plugin Height</DisplayName><Description type="singleValue">Set image height</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Visible"><Name type="singleValue">Visible</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Visible</DisplayName><Description type="singleValue">Show/Hide the plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="CssClass"><Name type="singleValue">CssClass</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Css Classes</DisplayName><Description type="singleValue">Set Css Classes (Comma separated) for this Plugin Ex:disabled,info</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HelpTip"><Name type="singleValue">HelpTip</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Help Tip</DisplayName><Description type="singleValue">Appears When mouseover</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onclick"><Name type="singleValue">onclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">click event</DisplayName><Description type="singleValue">click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ondbclick"><Name type="singleValue">ondbclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">dbclick event</DisplayName><Description type="singleValue">double click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onmouseover"><Name type="singleValue">onmouseover</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">mouseover event</DisplayName><Description type="singleValue">on mouseover event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LineColor"><Name type="singleValue">LineColor</Name><Type type="singleValue">color</Type><Value type="singleValue">#000000</Value><DisplayName type="singleValue">Line color</DisplayName><Description type="singleValue">Set line color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LineRotation"><Name type="singleValue">LineRotation</Name><Type type="singleValue">Select</Type><Value type="array"><element>auto</element><element>rotate(90deg)</element></Value><DisplayName type="singleValue">Line rotation </DisplayName><Description type="singleValue">Select line rotation angel</Description><SelectedValue type="singleValue">rotate(90deg)</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginVersion"><Name type="singleValue">PluginVersion</Name><Type type="singleValue">label</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Version</DisplayName><Description type="singleValue">plugin version</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter></usedPlugin><usedPlugin category="installed" type="imagePlugin" PageSource="undefined"><location><x>479</x><y>184</y></location><Parameter name="TimeFormat"><Name type="singleValue">TimeFormat</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationAliase"><Name type="singleValue">EquationAliase</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationText"><Name type="singleValue">EquationText</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ShowExtraReadingsFirst"><Name type="singleValue">ShowExtraReadingsFirst</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ExtraSensorReadings"><Name type="singleValue">ExtraSensorReadings</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ReffrenceWithAlias"><Name type="singleValue">ReffrenceWithAlias</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PageSource"><Name type="singleValue">PageSource</Name><Type type="singleValue">label</Type><Value type="singleValue">0</Value><DisplayName type="singleValue">Page Source</DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TypeOfPlugin"><Name type="singleValue">TypeOfPlugin</Name><Type type="singleValue">label</Type><Value type="singleValue">imagePlugin</Value><DisplayName type="singleValue">Plugin Type</DisplayName><Description type="singleValue">Show the type of plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginCategory"><Name type="singleValue">PluginCategory</Name><Type type="singleValue">label</Type><Value type="singleValue">installed</Value><DisplayName type="singleValue">Plugin Category</DisplayName><Description type="singleValue">Show category of plugin custom or installed</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginName"><Name type="singleValue">PluginName</Name><Type type="singleValue">input</Type><Value type="singleValue">Lamp</Value><DisplayName type="singleValue">Plugin name</DisplayName><Description type="singleValue">Set plugin name</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationX"><Name type="singleValue">LocationX</Name><Type type="singleValue">input</Type><Value type="singleValue">479</Value><DisplayName type="singleValue">Location of X axis</DisplayName><Description type="singleValue">Location of X axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationY"><Name type="singleValue">LocationY</Name><Type type="singleValue">input</Type><Value type="singleValue">184</Value><DisplayName type="singleValue">Location of Y axis</DisplayName><Description type="singleValue">Location of Y axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginWidth"><Name type="singleValue">PluginWidth</Name><Type type="singleValue">input</Type><Value type="singleValue">194</Value><DisplayName type="singleValue">Plugin Width</DisplayName><Description type="singleValue">Set image width</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginHeight"><Name type="singleValue">PluginHeight</Name><Type type="singleValue">input</Type><Value type="singleValue">215</Value><DisplayName type="singleValue">Plugin Height</DisplayName><Description type="singleValue">Set image height</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Visible"><Name type="singleValue">Visible</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Visible</DisplayName><Description type="singleValue">Show/Hide the plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="CssClass"><Name type="singleValue">CssClass</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Css Classes</DisplayName><Description type="singleValue">Set Css Classes (Comma separated) for this Plugin Ex:disabled,info</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HelpTip"><Name type="singleValue">HelpTip</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Help Tip</DisplayName><Description type="singleValue">Appears When mouseover</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onclick"><Name type="singleValue">onclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">click event</DisplayName><Description type="singleValue">click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ondbclick"><Name type="singleValue">ondbclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">dbclick event</DisplayName><Description type="singleValue">double click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onmouseover"><Name type="singleValue">onmouseover</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">mouseover event</DisplayName><Description type="singleValue">on mouseover event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ImageWidth"><Name type="singleValue">ImageWidth</Name><Type type="singleValue">Deprecated</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ImageHeight"><Name type="singleValue">ImageHeight</Name><Type type="singleValue">Deprecated</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ImageURL"><Name type="singleValue">ImageURL</Name><Type type="singleValue">input</Type><Value type="singleValue">https://icon-library.net/images/lamp-icon/lamp-icon-8.jpg</Value><DisplayName type="singleValue">Image URL</DisplayName><Description type="singleValue">Set custom image URL</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Resize"><Name type="singleValue">Resize</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Resize image</DisplayName><Description type="singleValue">Enable/disable image size</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="MakeImageLink"><Name type="singleValue">MakeImageLink</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Link-able</DisplayName><Description type="singleValue">Enable/disable image link</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LinkURL"><Name type="singleValue">LinkURL</Name><Type type="singleValue">input</Type><Value type="singleValue">http://www.google.com</Value><DisplayName type="singleValue">Link URL</DisplayName><Description type="singleValue">Set image link URL</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ImageRotation"><Name type="singleValue">ImageRotation</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Rotate image</DisplayName><Description type="singleValue">Set the angle to rotate image</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HasBorder"><Name type="singleValue">HasBorder</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Show border</DisplayName><Description type="singleValue">Show/hide image border</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderColor"><Name type="singleValue">BorderColor</Name><Type type="singleValue">color</Type><Value type="singleValue">green</Value><DisplayName type="singleValue">Border color</DisplayName><Description type="singleValue">Set border color</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderThikness"><Name type="singleValue">BorderThikness</Name><Type type="singleValue">input</Type><Value type="singleValue">4</Value><DisplayName type="singleValue">Border thikness</DisplayName><Description type="singleValue">Set border thikness</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="BorderStyle"><Name type="singleValue">BorderStyle</Name><Type type="singleValue">Select</Type><Value type="array"><element>solid</element><element>dashed</element><element>dotted</element></Value><DisplayName type="singleValue">Border style</DisplayName><Description type="singleValue">Select border style</Description><SelectedValue type="singleValue">solid</SelectedValue><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="NewTab"><Name type="singleValue">NewTab</Name><Type type="singleValue">True/False</Type><Value type="singleValue">NaN</Value><DisplayName type="singleValue">Open in new tab</DisplayName><Description type="singleValue">Enable/disable open in a new tab</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter></usedPlugin><usedPlugin category="installed" type="TimerPlugin" PageSource="undefined"><location><x>601</x><y>56</y></location><Parameter name="TimeFormat"><Name type="singleValue">TimeFormat</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationAliase"><Name type="singleValue">EquationAliase</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="EquationText"><Name type="singleValue">EquationText</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ShowExtraReadingsFirst"><Name type="singleValue">ShowExtraReadingsFirst</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ExtraSensorReadings"><Name type="singleValue">ExtraSensorReadings</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ReffrenceWithAlias"><Name type="singleValue">ReffrenceWithAlias</Name><Type type="singleValue">hidden</Type><Value type="singleValue"/><DisplayName type="singleValue"> </DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PageSource"><Name type="singleValue">PageSource</Name><Type type="singleValue">label</Type><Value type="singleValue">0</Value><DisplayName type="singleValue">Page Source</DisplayName><Description type="singleValue"> </Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="TypeOfPlugin"><Name type="singleValue">TypeOfPlugin</Name><Type type="singleValue">label</Type><Value type="singleValue">TimerPlugin</Value><DisplayName type="singleValue">Plugin Type</DisplayName><Description type="singleValue">Show the type of plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginCategory"><Name type="singleValue">PluginCategory</Name><Type type="singleValue">label</Type><Value type="singleValue">installed</Value><DisplayName type="singleValue">Plugin Category</DisplayName><Description type="singleValue">Show category of plugin custom or installed</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginName"><Name type="singleValue">PluginName</Name><Type type="singleValue">input</Type><Value type="singleValue">Light Timer</Value><DisplayName type="singleValue">Plugin name</DisplayName><Description type="singleValue">Set plugin name</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationX"><Name type="singleValue">LocationX</Name><Type type="singleValue">input</Type><Value type="singleValue">601</Value><DisplayName type="singleValue">Location of X axis</DisplayName><Description type="singleValue">Location of X axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="LocationY"><Name type="singleValue">LocationY</Name><Type type="singleValue">input</Type><Value type="singleValue">56</Value><DisplayName type="singleValue">Location of Y axis</DisplayName><Description type="singleValue">Location of Y axis</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginWidth"><Name type="singleValue">PluginWidth</Name><Type type="singleValue">input</Type><Value type="singleValue">50</Value><DisplayName type="singleValue">Plugin Width</DisplayName><Description type="singleValue">Set image width</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="PluginHeight"><Name type="singleValue">PluginHeight</Name><Type type="singleValue">input</Type><Value type="singleValue">50</Value><DisplayName type="singleValue">Plugin Height</DisplayName><Description type="singleValue">Set image height</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Visible"><Name type="singleValue">Visible</Name><Type type="singleValue">True/False</Type><Value type="singleValue">0</Value><DisplayName type="singleValue">Visible</DisplayName><Description type="singleValue">Show/Hide the plugin</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="CssClass"><Name type="singleValue">CssClass</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Css Classes</DisplayName><Description type="singleValue">Set Css Classes (Comma separated) for this Plugin Ex:disabled,info</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="HelpTip"><Name type="singleValue">HelpTip</Name><Type type="singleValue">input</Type><Value type="singleValue"/><DisplayName type="singleValue">Help Tip</DisplayName><Description type="singleValue">Appears When mouseover</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onclick"><Name type="singleValue">onclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">click event</DisplayName><Description type="singleValue">click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ondbclick"><Name type="singleValue">ondbclick</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">dbclick event</DisplayName><Description type="singleValue">double click event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="onmouseover"><Name type="singleValue">onmouseover</Name><Type type="singleValue">event</Type><Value type="singleValue"/><DisplayName type="singleValue">mouseover event</DisplayName><Description type="singleValue">on mouseover event</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Duration"><Name type="singleValue">Duration</Name><Type type="singleValue">input</Type><Value type="singleValue">1000</Value><DisplayName type="singleValue">Duration </DisplayName><Description type="singleValue">duration of timer by milliseconds</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="ontimerTick"><Name type="singleValue">ontimerTick</Name><Type type="singleValue">event</Type><Value type="singleValue"> //===Page: IoT Kit - Control, Event: global functions and variables===


function publish(topic, message){
  FireEvent({
    EventType: "Mqtt Publish",
    EventProperties: {
        mqttUrl: "mqttserver.masterofthings.com",
        username: "optional",
        password: "optional",
        topic: topic,
        message: message
    }
  }, );
}


//**********End Of Event: global functions and variables***********


//===Page: IoT Kit - Control, Plugin: flashPublish , Event: click event===

var flash = GetPluginParameterValue('flashRadioBtn','Selected item');
var phoneNumber_Text = GetPluginParameterValue('phoneNumber','Text');

if(flash == "ON"){
  var topic = phoneNumber_Text + "/Flash/ON";  
}else{
  var topic = phoneNumber_Text + "/Flash/OFF";
}

console.log("topic", topic);

publish(topic, flash);


//*****End Of Event:click event , Plugin:flashPublish*******

//===Page: IoT Kit - Control, Plugin: flashDurationPublish , Event: click event===

var message = GetPluginParameterValue('flashDuration','Text');
var phoneNumber = GetPluginParameterValue('phoneNumber','Text');
var topic = phoneNumber + "/Flash/Duration";

publish(topic, message);


//*****End Of Event:click event , Plugin:flashDurationPublish*******


var SensorID=1911;
GetLatestValueOfSensor(SensorID,"x",function(res){
	res=JSON.parse(res);
          SetPluginParameterValue("LightLable","Caption","currentLuxValue="+res.currentLuxValue);
          DrawPlugin("LightLable");
ChangeLightValue (res);
 
});

var ChangeLightValue=function ChangeLightValue (LightSensor) {

  var Lux;
   
  if (LightSensor.captureTime&gt;captureTime) {
        captureTime=parseFloat(LightSensor.captureTime);
        Lux=parseFloat(LightSensor.currentLuxValue);
  
    
 }
  
}</Value><DisplayName type="singleValue">Timer Tick</DisplayName><Description type="singleValue">Timer Tick</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Start"><Name type="singleValue">Start</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Active</DisplayName><Description type="singleValue">Start timer duration</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter><Parameter name="Recurrence"><Name type="singleValue">Recurrence</Name><Type type="singleValue">True/False</Type><Value type="singleValue">1</Value><DisplayName type="singleValue">Recurrence</DisplayName><Description type="singleValue">Recurrence</Description><addProperty type="singleValue">function(name, value) {
        this[name] = value;
    }</addProperty></Parameter></usedPlugin><Script>
function Plugin_onclick(pluginName){
switch(pluginName){
case 'Page Calculate Light Value':{
 
break;
}
case 'LightLable':{
 
break;
}
case 'phoneLabel':{
 
break;
}
case 'flashToggleLabel':{
 
break;
}
case 'flashDurationLabel':{
 
break;
}
case 'phoneNumber':{
 
break;
}
case 'flashRadioBtn':{
 
break;
}
case 'flashDuration':{
 
break;
}
case 'flashDurationPublish':{
 
break;
}
case 'LineSeparator 1':{
 
break;
}
case 'Lamp':{
 
break;
}
case 'Light Timer':{
 
break;
}
default :
 RTECreatedPlugins_onclick();
 break;
}
}
function Plugin_ondbclick(pluginName){
switch(pluginName){
case 'Page Calculate Light Value':{
 
break;
}
case 'LightLable':{
 
break;
}
case 'phoneLabel':{
 
break;
}
case 'flashToggleLabel':{
 
break;
}
case 'flashDurationLabel':{
 
break;
}
case 'phoneNumber':{
 
break;
}
case 'flashRadioBtn':{
 
break;
}
case 'flashDuration':{
 
break;
}
case 'flashDurationPublish':{
 
break;
}
case 'LineSeparator 1':{
 
break;
}
case 'Lamp':{
 
break;
}
case 'Light Timer':{
 
break;
}
default :
 RTECreatedPlugins_ondbclick();
 break;
}
}
function Plugin_onmouseover(pluginName){
switch(pluginName){
case 'Page Calculate Light Value':{
 
break;
}
case 'LightLable':{
 
break;
}
case 'phoneLabel':{
 
break;
}
case 'flashToggleLabel':{
 
break;
}
case 'flashDurationLabel':{
 
break;
}
case 'phoneNumber':{
 
break;
}
case 'flashRadioBtn':{
 
break;
}
case 'flashDuration':{
 
break;
}
case 'flashDurationPublish':{
 
break;
}
case 'LineSeparator 1':{
 
break;
}
case 'Lamp':{
 
break;
}
case 'Light Timer':{
 
break;
}
default :
 RTECreatedPlugins_onmouseover();
 break;
}
}
function GetMyPageId(){return 0;}
function GetMyProjectId(){return 1543;}
RedrawRTEBGPlugins();
function RedrawRTEBGPlugins(){
if(window.RTEBackGroundPlugins != undefined){
if(window.RTEBackGroundPlugins.length&gt;0){
            for(var j=0; j &lt; window.RTEBackGroundPlugins.length; j++){
            var PluginIndex=window.RTEBackGroundPlugins[j].PluginIndex;
            var PluginDiv=window.RTEBackGroundPlugins[j].PluginDiv;
            var PluginDivId=window.RTEBackGroundPlugins[j].PluginDivId;
            IDEObject.CurrentProject.ProjectPagesList[0].UsedPluginsList[PluginIndex].Draw(PluginDiv,PluginDivId);
            }
}}};</Script></page>
